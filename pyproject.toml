[project]
name = "pytest-http"
version = "0.1.0"
description = "pytest plugin for HTTP testing using JSON files"
readme = "README.md"
requires-python = ">=3.13"
authors = [{ name = "Alexander Eresov", email = "aeresov@gmail.com" }]
dependencies = ["pytest-http-engine"]

[project.optional-dependencies]
aws = ["requests-auth-aws-sigv4>=0.7.0", "boto3>=1.35.0"]
mcp = ["pytest-http-mcp"]

[dependency-groups]
dev = ["http-server-mock>=1.7", "responses>=0.25.7", "ruff>=0.12.1"]

[tool.uv.workspace]
members = ["packages/*"]

[tool.uv.sources]
pytest-http-engine = { workspace = true }
pytest-http-mcp = { workspace = true }

[build-system]
requires = ["uv_build>=0.7.21,<0.8.0"]
build-backend = "uv_build"

[project.entry-points.pytest11]
pytest_http = "pytest_http.pytest_plugin"

[tool.ruff]
line-length = 180
target-version = "py313"

[tool.ruff.format]
quote-style = "double"
line-ending = "lf"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["tests", "utils"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
norecursedirs = ["examples"]
pytester_example_dir = "tests/integration/examples"
# addopts = "--log-disable=werkzeug"

[tool.pyright]
exclude = ["cdk.out/"]
ignore = [".venv/"]
reportMissingImports = "error"
reportMissingTypeStubs = false
reportExplicitAny = false
typeCheckingMode = "off"
pythonPlatform = "Linux"
